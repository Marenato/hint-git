Вот самые необходимые команды Git для повседневной работы:

1. Инициализация и клонирование:

git init: Создать новый Git репозиторий в текущем каталоге.
git clone <URL>: Клонировать (скопировать) репозиторий из удаленного источника.
2. Работа с изменениями:

git status: Показать текущее состояние репозитория (измененные, добавленные, удаленные файлы).
git add <файл>: Добавить файл в “индекс” (staging area) для включения в следующий коммит. git add . добавляет все измененные файлы.
git commit -m "<сообщение>": Зафиксировать изменения в локальном репозитории с указанным сообщением.
git diff: Показать изменения между рабочей директорией и индексом, или между двумя коммитами.
git rm <файл>: Удалить файл из репозитория (и рабочей директории).
3. Ветки и слияние:

git branch: Показать список веток (текущая ветка отмечена звездочкой).
git branch <имя>: Создать новую ветку.
git checkout <имя>: Переключиться на указанную ветку.
git merge <имя>: Слить указанную ветку в текущую ветку.
git branch -d <имя>: Удалить ветку (только после слияния!). Используйте -D для принудительного удаления.
4. Работа с удаленным репозиторием:

git remote add origin <URL>: Добавить удаленный репозиторий с именем “origin” (обычно используется для основного удаленного репозитория).
git push origin <ветка>: Отправить локальные изменения в удаленный репозиторий (в указанную ветку). git push -u origin <ветка> устанавливает отслеживание ветки.
git pull origin <ветка>: Получить изменения из удаленного репозитория и слить их с текущей веткой.
git fetch origin: Получить изменения из удаленного репозитория, не сливая их.
5. История и отмена изменений:

git log: Показать историю коммитов.
git log --oneline: Показать историю коммитов в сокращенном виде.
git checkout -- <файл>: Отменить изменения в файле, вернув его к последней зафиксированной версии.
git reset <коммит>: Переместить указатель текущей ветки на указанный коммит (изменения остаются в рабочей директории).
git reset --hard <коммит>: Переместить указатель текущей ветки на указанный коммит и удалить все изменения в рабочей директории (осторожно!).
git revert <коммит>: Создать новый коммит, отменяющий изменения, внесенные указанным коммитом.